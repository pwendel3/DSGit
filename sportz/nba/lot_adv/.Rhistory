if(printer){
if(printer){print(paste(out,' is a solution!'))}
out2<-out
keeps<-rep(0,pc)
for(i in 1:pc){
print(paste(out2,' at start of round ',i))
out2<-out2-1
print(paste('monkey gets ',mt, ', ',out2,' left'))
keep<-out2/pc
out2<-(out2)*(pc-1)/pc
print(paste('pirate takes ',keep,' and leaves ',leave))
#out2<-steal(out2,pc,mt)
#print(paste('monkey gets ',mt, ', ',out2,' left'))
keeps[i]<-keep
}
keeps<-keeps+out2/pc
for(i in 1:pc){
print(paste('pirate 1 keeps ',keeps[i],' coconuts'))
}
print(paste('monkey keeps ',mt*pc,' coconuts'))
}
return(out)
}
dynacoco(7,1,TRUE)
dynacoco<-function(pc,mt,printer=FALSE){
if(printer){
print(paste('Pirates: ',pc))
print(paste('Monkey keeps: ',mt ))
}
out<-0
x<-1
# increment until a solution is found
while(out==0){
out<-checknum(x,pc,mt)
x<-x+1
}
# print breakdown if printer is true
if(printer){
if(printer){print(paste(out,' is a solution!'))}
out2<-out
keeps<-rep(0,pc)
for(i in 1:pc){
print(paste(out2,' at start of round ',i))
out2<-out2-1
print(paste('monkey gets ',mt, ', ',out2,' left'))
keep<-out2/pc
out2<-(out2)*(pc-1)/pc
print(paste('pirate takes ',keep,' and leaves ',out2))
#out2<-steal(out2,pc,mt)
#print(paste('monkey gets ',mt, ', ',out2,' left'))
keeps[i]<-keep
}
keeps<-keeps+out2/pc
for(i in 1:pc){
print(paste('pirate 1 keeps ',keeps[i],' coconuts'))
}
print(paste('monkey keeps ',mt*pc,' coconuts'))
}
return(out)
}
dynacoco(7,1,TRUE)
#empty matrix
surftib<-tibble(pirates=numeric(),monkey_take=numeric(),min_coconuts=numeric())
# simulate for 2:10 pirates, 1:10 monkeys
# (WARNING: this takes a long time)
for(i in 2:8){
for(j in 1:8){
coco<-dynacoco(i,j)
surftib<-surftib%>%add_row(pirates=i,monkey_take=j,min_coconuts=coco)
}
}
View(surftib)
bigtib<-surftib%>%spread(monkey_take,min_coconuts)
tibmat<-as.matrix(bigtib[,2:ncol(bigtib)])
p<-plot_ly(data=surftib,x=1:8,y=2:8,z=~tibmat)%>%
add_surface()%>%layout(title='Min. Coconuts by Pirate, Monkey Take',
scene=list(xaxis=list(title='Monkey Takes'),
yaxis=list(title='Pirates'),
zaxis=list(title='Min. Coconuts'))
)
p
api_create(p,,'coconuts')
api_create(p,,'coconuts','overwrite')
api_create(p,filename = 'coconuts')
user<-'pwendel3'
apikey<-'nFUOFTfKSwcQg7nPoQOb'
Sys.setenv('plotly_username'=user)
Sys.setenv('plotly_api_key'=apikey)
api_create(p,filename='coconuts')
bigtib
checknum(34.5,2,2)
source('~/GitHub/DSGit/riddler/dynamic_coco.R')
surftib[surftib$min_coconuts%%1!=0,]
dynacoco(3,3,TRUE)
# function to check if number is a solution
checknum<-function(xin,pc,mt){
x<-pc*xin
solved<-0
for(i in 1:pc){
x<-invsteal(x,pc,mt)
#print(x)
#print(x%%1)
#if(x%%1>1e-10){
if(x%%1!=0){
#print(paste(x,' is not an integer'))
break
}
if(i==pc){
solved<-x
}
}
return(solved)
}
dynacoco(3,3,TRUE)
dynacoco(7,1,TRUE)
dynacoco(3,4,TRUE)
# function to check if number is a solution
checknum<-function(xin,pc,mt){
x<-pc*xin
solved<-0
for(i in 1:pc){
x<-invsteal(x,pc,mt)
#print(x)
#print(x%%1)
#if(x%%1>1e-10){
if(x%%1!=0){
#print(paste(x,' is not an integer'))
break
}
else if(i==pc & x%%1==0){
solved<-x
}
}
return(solved)
}
dynacoco(3,4,TRUE)
dynacoco(7,1,TRUE)
# function to check if number is a solution
checknum<-function(xin,pc,mt){
x<-pc*xin
solved<-0
for(i in 1:pc){
if((x/(pc-1))*pc%1==0){
x<-invsteal(x,pc,mt)
#print(x)
#print(x%%1)
#if(x%%1>1e-10){
if(x%%1!=0){
#print(paste(x,' is not an integer'))
break
}
else if(i==pc & x%%1==0){
solved<-x
}
}else{break}
}
return(solved)
}
# function to check if number is a solution
checknum<-function(xin,pc,mt){
x<-pc*xin
solved<-0
for(i in 1:pc){
if((x/(pc-1))*pc%%1==0){
x<-invsteal(x,pc,mt)
#print(x)
#print(x%%1)
#if(x%%1>1e-10){
if(x%%1!=0){
#print(paste(x,' is not an integer'))
break
}
else if(i==pc & x%%1==0){
solved<-x
}
}else{break}
}
return(solved)
}
dynacoco(7,1,TRUE)
dynacoco(3,3,TRUE)
# function to check if number is a solution
checknum<-function(xin,pc,mt){
x<-pc*xin
solved<-0
for(i in 1:pc){
if(((x/(pc-1))*pc)%%1==0){
x<-invsteal(x,pc,mt)
#print(x)
#print(x%%1)
#if(x%%1>1e-10){
if(x%%1!=0){
#print(paste(x,' is not an integer'))
break
}
else if(i==pc & x%%1==0){
solved<-x
}
}else{break}
}
return(solved)
}
dynacoco(3,3,TRUE)
source('~/GitHub/DSGit/riddler/dynamic_coco.R')
dynacoco(3,3,TRUE)
surftib[surftib$min_coconuts%%1!=0,]
source('~/GitHub/DSGit/riddler/dynamic_coco.R')
surftib[surftib$min_coconuts%%1!=0,]
dynacoco(3,8,TRUE)
dynacoco(8,3,TRUE)
dynacoco(8,4,TRUE)
dynacoco(4,8,TRUE)
source('~/GitHub/DSGit/riddler/dynamic_coco.R')
p<-plot_ly(data=surftib,x=1:8,y=2:8,z=~tibmat)%>%
add_surface()%>%layout(title='Min. Coconuts by Pirate, Monkey Take',
scene=list(xaxis=list(title='Monkey Takes'),
yaxis=list(title='Pirates'),
zaxis=list(title='Min. Coconuts'))
)
p
api_create(p,filename = 'coconuts')
dynacoco(8,8,TRUE)
a<-as.character(1:10)
a
paste(a[0],a[1],a[2])
paste0(a[0],a[1],a[2])
as.numeric(paste0(a[0],a[1],a[2]))
source('~/GitHub/DSGit/riddler/numsim.R')
source('~/GitHub/DSGit/riddler/numsim.R')
source('~/GitHub/DSGit/riddler/numsim.R')
all(distinct(c(aa,bb,cc,dd,ee))
)
all(distinct(as.numeric(c(aa,bb,cc,dd,ee))))
as.numeric(c(aa,bb,cc,dd,ee))
distinct(as.numeric(c(aa,bb,cc,dd,ee)))
duplicated(as.numeric(c(aa,bb,cc,dd,ee)))
any(duplicated(as.numeric(c(aa,bb,cc,dd,ee))))
!any(duplicated(as.numeric(c(aa,bb,cc,dd,ee))))
source('~/GitHub/DSGit/riddler/numsim.R')
219978*4
warnings()
as.numeric('01345')
as.numeric('01450')
bigtib<-surftib%>%filter(pirates<8)%>%spread(monkey_take,min_coconuts)
tibmat<-as.matrix(bigtib[,2:ncol(bigtib)])
p<-plot_ly(data=surftib,x=1:8,y=2:8,z=~tibmat)%>%
add_surface()%>%layout(title='Min. Coconuts by Pirate, Monkey Take',
scene=list(xaxis=list(title='Monkey Takes'),
yaxis=list(title='Pirates'),
zaxis=list(title='Min. Coconuts'))
)
p
source('~/GitHub/DSGit/riddler/numsim.R')
source('~/GitHub/DSGit/riddler/numsim.R')
dynacoco(8,1)
dynacoco(8,1,TRUE)
source('~/GitHub/DSGit/riddler/numsim.R')
dynaco(4,6,TRUE)
dynacoc(4,6,TRUE)
dynacoco(4,6,TRUE)
dynacoco(2,1,TRUE)
dynacoco(8,7,TRUE)
dynacoco(8,8,TRUE)
dynacoco(3,1,TRUE)
dynacoco(4,1,TRUE)
dynacoco(4,2,TRUE)
dynacoco(4,3,TRUE)
dynacoco(5,1,TRUE)
libary(ggplot2)
library(ggplotly)
install.packages('ggplotly')
alldat<-read_csv('lot_adv.csv')
setwd('C:\Users\pwendel\Documents\GitHub\DSGit\sportz\nba')
setwd('C\\Users\pwendel\Documents\GitHub\DSGit\sportz\nba')
setwd('C//Users\pwendel\Documents\GitHub\DSGit\sportz\nba')
setwd('C//Users/pwendel/Documents/GitHub/DSGit/sportz/nba')
getwd
getwd(\)
getwd()
alldat<-read_csv('/GitHub/DSGit/sportz/nbalot_adv.csv')
library(tidyverse)
alldat<-read_csv('/GitHub/DSGit/sportz/nbalot_adv.csv')
alldat<-read_csv('/GitHub/DSGit/sportz/nba/lot_adv.csv')
alldat<-read_csv('C//Users/pwendel/Documents/GitHub/DSGit/sportz/nba/lot_adv.csv')
alldat<-read_csv('../lot_adv.csv')
setwd('C//Users/pwendel/Documents/GitHub/DSGit/sportz/nba')
setwd('C//Users/pwendel/Documents/GitHub/DSGit/sportz/nba')
alldat<-read_csv('../lot_adv.csv')
library(shiny)
library(ggplot2)
library(tidyverse)
library(plotly)
library(ggplotly)
setwd('C//Users/pwendel/Documents/GitHub/DSGit/sportz/nba')
setwd('C:/Users/pwendel/Documents/GitHub/DSGit/sportz/nba')
alldat<-read_csv('../lot_adv.csv')
alldat<-read_csv('lot_adv.csv')
alldat
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
make.names(colnames(alldat))
colnames(alldat)<-str_replace(colnames(alldat),'%','Percent')
colnames(alldat)
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
runApp('lot_adv')
class(alldat$Pk)
glimpse(alldat)
runApp('lot_adv')
devtools::install_github('hadley/ggplot2')
runApp('lot_adv')
shiny::runApp()
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
install.packages('tidyverse')
install.packages('plotly')
runApp()
runApp()
runApp()
#library(ggplotly)
setwd('C:/Users/pwendel/Documents/GitHub/DSGit/sportz/nba')
alldat<-read_csv('lot_adv.csv')
colnames(alldat)
colnames(alldat)[31:52]
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
runApp()
runApp()
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
for (i in 1:length(labelcol)){
l[[i]]<-labelcol[1]=colnamer[i]
}
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
l<-list()
for (i in 1:length(labelcol)){
l[[i]]<-labelcol[1]=colnamer[i]
}
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
l<-list()
for (i in 1:length(labelcol)){
l[[i]]<-labelcol[i]=colnamer[i]
}
l
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
l<-list()
for (i in 1:length(labelcol)){
l<-list.append(labelcol[i]=colnamer[i])
}
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
l<-list()
for (i in 1:length(labelcol)){
l<-list.append(l,labelcol[i]=colnamer[i])
}
labelcol[i]=colnamer[i]
labelcol[i]
colnamer[i]
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
l<-list()
for (i in 1:length(labelcol)){
l<-list.append(l,dval(labelcol[i])=colnamer[i])
}
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
l<-list()
for (i in 1:length(labelcol)){
l<-list.append(l,eval(labelcol[i])=colnamer[i])
}
labelcol<-c(
'Games Played','Minutes Played','Player Eff. Rating','True Shooting %',
'3pt Att. Rate','FT Att. Rate','Def. Reb. %','Off. Reb. %','True Reb. %',
'Asst. %','Steal %','Block %','TO %','Usage %','Off. Win Share','Def. Win Share',
'Win Share','Win Share per 48','Off. Box +/-','Def. Box +/-','Box +/-','Value Over Replacement'
)
colnamer<-colnames(alldat)[31:52]
l<-c()
for (i in 1:length(labelcol)){
l<-c(l,eval(labelcol[i])=colnamer[i])
}
